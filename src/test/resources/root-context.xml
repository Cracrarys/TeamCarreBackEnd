<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
<<<<<<< HEAD
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
   	 http://www.springframework.org/schema/beans/spring-beans.xsd
   	 http://www.springframework.org/schema/context
   	 http://www.springframework.org/schema/context/spring-context-4.2.xsd
   	 http://www.springframework.org/schema/tx
   	 http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    

    <!-- activer la detection des annotations ex : @Autowired-->
    <context:annotation-config/>
    
    <!-- activer l'auto scan des composants (beans) -->
    <context:component-scan base-package="com.adaming.rh"/>
    
    
    <!-- localisation du fichier de proprietes : jdbc.properties -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    

    <!-- bean du dataSource -->
    <bean id="datasourceBean" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   	 
   	 <property name="driverClassName" value="${jdbc.driverClassName}"/>
   	 <property name="url" value="${jdbc.url}"/>
   	 <property name="login" value="${jdbc.login}"/>
   	 <property name="password" value="${jdbc.password}"/>
   	 
    </bean>
    
    <!-- bean de la session factory -->
    <bean id="sessionFactoryBean" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
     	 
      	<!-- injection du datasource  -->
      	<property name="dataSource" ref="datasourceBean"/>
     	 
<!--       	les classes annotées -->
      	<property name="annotatedClasses" >
     			 <value>
     			 com.adaming.rh.entities.DocumentRH,
     			 com.adaming.rh.entities.Employe,
     			 com.adaming.rh.entities.Fourniture,
     			 com.adaming.rh.entities.FormulaireEmprunt,
     			 com.adaming.rh.entities.Role,
     			 com.adaming.rh.entities.User
     			 </value>

      	</property>
     	 
      	<!-- proprietes d'hibernate -->
      	<property name="hibernateProperties">
     		 <props>
     			 <prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
     			 <prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
     			 <prop key="hibernate.hbm2ddl.auto">${jdbc.hibernate.hbm2ddl.auto}</prop>
     		 </props>
      	</property>    	 
    </bean>
    
   	 <!-- detection des annotations des transactions : @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManagerBean"/>
    
    
    <!-- bean du transaction manager : gestion des transactions -->
    <bean id="transactionManagerBean"
      	class="org.springframework.orm.hibernate4.HibernateTransactionManager">
     	 
      	<!-- injection de la session factory -->
      	<property name="sessionFactory" ref="sessionFactoryBean"/>
     	 
     </bean>
    
    
</beans>







=======
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- Root Context: pour le backend : defines shared resources visible to 
		all other web components -->
	<!-- activer la detection des annotations ex : @Autowired -->
	<context:annotation-config />

	<!-- activer l'auto scan des composants (beans) : dans quel package il faut 
		charcher composants àinstancier -->
	<context:component-scan
		base-package="com.example.demo" />

	<context:property-placeholder
		location="jdbc.properties" />

	<bean id="datasourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="login" value="${jdbc.login}" />
		<property name="password" value="${jdbc.password}" />

	</bean>

	<!-- bean nie la session factory -->
	<bean id="sessionFactoryBean"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<!-- injection du datasource -->
		<property name="dataSource" ref="datasourceBean" />

		<!-- les classes annotées -->
		<property name="annotatedClasses">
			<value>

				com.example.demo.entity.User,
				com.example.demo.entity.Role,
				com.example.demo.entity.Employe,
				com.example.demo.entity.DocumentRH,
				com.example.demo.entity.FormulaireEmprunt,
				com.example.demo.entity.Fourniture

			</value>

		</property>

		<!-- proprietes d'hibernate -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<!-- detection des annotations des transactions : @Transactional : créée 
		les transactions, gère l'ORM -->
	<tx:annotation-driven
		transaction-manager="transactionManagerBean" />


	<!-- bean du transaction manager : gestion des transactions -->
	<bean id="transactionManagerBean"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">

		<!-- injection de la session factory -->
		<property name="sessionFactory" ref="sessionFactoryBean" />

	</bean>

	<s:http auto-config="true" use-expressions="true">
		<s:intercept-url pattern="/Affaire/*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"></s:intercept-url>

		<s:intercept-url pattern="/Tache/*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"></s:intercept-url>

		<s:intercept-url pattern="/Tribunal/*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"></s:intercept-url>

		<s:intercept-url pattern="/Utilisateur/*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"></s:intercept-url>

		<s:intercept-url pattern="/Phase/*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"></s:intercept-url>

		<s:intercept-url pattern="/User/*"
			access="hasRole('ROLE_ADMIN')"></s:intercept-url>

		<s:intercept-url pattern="/Role/*"
			access="hasRole('ROLE_ADMIN')"></s:intercept-url>

		<s:intercept-url pattern="/"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"></s:intercept-url>

		<s:form-login login-page="/login" default-target-url="/"
			authentication-failure-url="/erreur" />
	</s:http>
	<s:authentication-manager>
		<s:authentication-provider>
			<s:jdbc-user-service
				data-source-ref="datasourceBean"
				authorities-by-username-query="select u.username, r.rolename from
users u, roles r where u.iduser = r.iduser and u.username =? "
				users-by-username-query="select username,password,
activated from users where username=?" />
		</s:authentication-provider>
	</s:authentication-manager>


</beans>
>>>>>>> 16e99490bdd4d9e9c3e3c4e82492d9167a6f4e9f
